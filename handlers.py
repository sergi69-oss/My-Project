from aiogram import Router, Bot, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.enums import ParseMode
import reply_keyboard as kbr
import inline_keyboard as kb
from aiogram.types import FSInputFile

router = Router()

@router.message(CommandStart())
async def start(message: Message):
    await message.answer('üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Ñ–∏—Ç–Ω–µ—Å–∞ —Å –±–æ—Ç–æ–º –°–ø–æ—Ä—Ç—Å–º–µ–Ω! üí™'
                         '\n\n–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å —Å–≤–æ–π –ø—É—Ç—å –∫ –∑–¥–æ—Ä–æ–≤—å—é –∏ —Å–∏–ª–µ? –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ù–∞—á–∞—Ç—å¬ª, –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã–±—Ä–∞—Ç—å, –∫–∞–∫—É—é –≥—Ä—É–ø–ø—É –º—ã—à—Ü —Ç—ã —Ö–æ—á–µ—à—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å!',
                         reply_markup=kb.start)

@router.callback_query(F.data == 'start')
async def start(callback: CallbackQuery):
    await callback.message.answer('üöÄ',
                                  reply_markup=kbr.main)
    await callback.message.answer('ü§î –ì–¥–µ —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–Ω–∏–º–∞—Ç—å—Å—è? –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: \n\n1. üè° –î–æ–º–∞\n2. üèãÔ∏è‚Äç‚ôÇÔ∏è –í —Å–ø–æ—Ä—Ç–∑–∞–ª–µ',
                                  reply_markup=kb.home_gym)


@router.message(F.text == '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ üèãÔ∏è‚Äç‚ôÇÔ∏è')
async def start(message: Message):
    await message.answer('ü§î –ì–¥–µ —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–Ω–∏–º–∞—Ç—å—Å—è? –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: \n\n1. üè° –î–æ–º–∞\n2. üèãÔ∏è‚Äç‚ôÇÔ∏è –í —Å–ø–æ—Ä—Ç–∑–∞–ª–µ',
                         reply_markup=kb.home_gym)


@router.callback_query(F.data == 'home')
async def home(callback: CallbackQuery):
    await callback.message.answer('üîç –û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫—É—é –≥—Ä—É–ø–ø—É –º—ã—à—Ü —Ç—ã —Ö–æ—á–µ—à—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å?'
                                  '\n\n–í–æ—Ç —Å–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≥—Ä—É–ø–ø –º—ã—à—Ü:'
                                  '\n\n1. üí™ –ì—Ä—É–¥–Ω—ã–µ –º—ã—à—Ü—ã'
                                  '\n2. üö¥‚Äç‚ôÇÔ∏è –ù–æ–≥–∏'
                                  '\n3. üßó‚Äç‚ôÄÔ∏è –°–ø–∏–Ω–∞'
                                  '\n4. üèãÔ∏è‚Äç‚ôÇÔ∏è –ü–ª–µ—á–∏'
                                  '\n5. ü¶æ –ë–∏—Ü–µ–ø—Å—ã'
                                  '\n6. üî• –¢—Ä–∏—Ü–µ–ø—Å—ã'
                                  '\n7. üåü –ü—Ä–µ—Å—Å'
                                  '\n8. üçë –Ø–≥–æ–¥–∏—á–Ω—ã–µ –º—ã—à—Ü—ã'
                                  '\n\n–í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –≥—Ä—É–ø–ø, –∏ —è –ø–æ–¥–±–µ—Ä—É –¥–ª—è —Ç–µ–±—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, –∫–∞–∫ –¥–ª—è –¥–æ–º–∞, —Ç–∞–∫ –∏ –¥–ª—è –∑–∞–ª–∞!',
                                  reply_markup=kb.types_home)

@router.callback_query(F.data == 'gym')
async def gym(callback: CallbackQuery):
    await callback.message.answer('üîç –û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫—É—é –≥—Ä—É–ø–ø—É –º—ã—à—Ü —Ç—ã —Ö–æ—á–µ—à—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å?'
                                  '\n\n–í–æ—Ç —Å–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≥—Ä—É–ø–ø –º—ã—à—Ü:'
                                  '\n\n1. üí™ –ì—Ä—É–¥–Ω—ã–µ –º—ã—à—Ü—ã'
                                  '\n2. üö¥‚Äç‚ôÇÔ∏è –ù–æ–≥–∏'
                                  '\n3. üßó‚Äç‚ôÄÔ∏è –°–ø–∏–Ω–∞'
                                  '\n4. üèãÔ∏è‚Äç‚ôÇÔ∏è –ü–ª–µ—á–∏'
                                  '\n5. ü¶æ –ë–∏—Ü–µ–ø—Å—ã'
                                  '\n6. üî• –¢—Ä–∏—Ü–µ–ø—Å—ã'
                                  '\n7. üåü –ü—Ä–µ—Å—Å'
                                  '\n8. üçë –Ø–≥–æ–¥–∏—á–Ω—ã–µ –º—ã—à—Ü—ã'
                                  '\n\n–í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –≥—Ä—É–ø–ø, –∏ —è –ø–æ–¥–±–µ—Ä—É –¥–ª—è —Ç–µ–±—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, –∫–∞–∫ –¥–ª—è –¥–æ–º–∞, —Ç–∞–∫ –∏ –¥–ª—è –∑–∞–ª–∞!',
                                  reply_markup=kb.types_gym)


@router.callback_query(F.data == 'chest_home')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>1. –ì—Ä—É–¥–Ω—ã–µ –º—ã—à—Ü—ã üí™</b>'
                                  '\n\n- –û—Ç–∂–∏–º–∞–Ω–∏—è (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –û—Ç–∂–∏–º–∞–Ω–∏—è —Å –ø–æ–¥–Ω—è—Ç—ã–º–∏ –Ω–æ–≥–∞–º–∏ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –£–∑–∫–∏–µ –æ—Ç–∂–∏–º–∞–Ω–∏—è (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.home_chest,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'legs_home')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>2. –ù–æ–≥–∏ üö¥‚Äç</b>Ô∏è'
                                  '\n\n- –ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15-20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –í—ã–ø–∞–¥—ã (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –Ω–∞ –∫–∞–∂–¥—É—é –Ω–æ–≥—É)'
                                  '\n- –ü–æ–¥—ä–µ–º—ã –Ω–∞ –Ω–æ—Å–∫–∏ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15 —Ä–∞–∑)',
                                  reply_markup=kb.home_legs,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'back_home')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>3. –°–ø–∏–Ω–∞ üßó‚Äç</b>Ô∏è'
                                  '\n\n- –ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è –Ω–∞ —Ç—É—Ä–Ω–∏–∫–µ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 5-10 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π, –µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å)'
                                  '\n- –ù–∞–∫–ª–æ–Ω—ã —Å –≥–∞–Ω—Ç–µ–ª—è–º–∏ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –ü–æ–≤–æ—Ä–æ—Ç—ã —Ç—É–ª–æ–≤–∏—â–∞ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.home_back,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'shoulders_home')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>Ô∏è4. –ü–ª–µ—á–∏ üèãÔ∏è</b>Ô∏è‚Äç'
                                  '\n\n- –ü–æ–¥—ä–µ–º—ã –≥–∞–Ω—Ç–µ–ª–µ–π –≤ —Å—Ç–æ—Ä–æ–Ω—ã (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 12-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π —Å—Ç–æ—è (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –û–±—Ä–∞—Ç–Ω—ã–µ –æ—Ç–∂–∏–º–∞–Ω–∏—è –æ—Ç —Å–∫–∞–º—å–∏ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8-10 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.home_shoulders,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'biceps_home')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>Ô∏è5. –ë–∏—Ü–µ–ø—Å—ã ü¶æ</b>Ô∏è'
                                  '\n\n- –°–≥–∏–±–∞–Ω–∏—è —Å –≥–∞–Ω—Ç–µ–ª—è–º–∏ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –°–≥–∏–±–∞–Ω–∏—è –Ω–∞ —É–∑–∫–æ–º —Ö–≤–∞—Ç–µ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –ü–æ–¥—ä–µ–º—ã —Å –±—É—Ç—ã–ª–∫–∞–º–∏ –≤–æ–¥—ã –∏–ª–∏ —Ç—è–∂—ë–ª—ã–º –ø—Ä–µ–¥–º–µ—Ç–æ–º (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.home_biceps,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'triceps_home')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>Ô∏è6. –¢—Ä–∏—Ü–µ–ø—Å—ã üî•</b>Ô∏è'
                                  '\n\n- –û—Ç–∂–∏–º–∞–Ω–∏—è –Ω–∞ –±—Ä—É—Å—å—è—Ö (–∏–ª–∏ –æ—Ç –º–µ–±–µ–ª–∏) (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π —Å—Ç–æ—è (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –†–∞–∑–≥–∏–±–∞–Ω–∏—è –≥–∞–Ω—Ç–µ–ª–∏ –∑–∞ –≥–æ–ª–æ–≤–æ–π (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.home_triceps,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'abs_home')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>Ô∏è7. –ü—Ä–µ—Å—Å üåü</b>Ô∏è'
                                  '\n\n- –°–∫—Ä—É—á–∏–≤–∞–Ω–∏—è (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15-20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –ü–ª–∞–Ω–∫–∞ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 30-60 —Å–µ–∫—É–Ω–¥)'
                                  '\n- –ù–æ–∂–Ω–∏—Ü—ã (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15-20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.home_abs,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'gluteal_home')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>Ô∏è8. –Ø–≥–æ–¥–∏—á–Ω—ã–µ –º—ã—à—Ü—ã üçë</b>Ô∏è'
                                  '\n\n- –ú–æ—Å—Ç–∏–∫ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15-20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –í—ã–ø–∞–¥—ã –Ω–∞–∑–∞–¥ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –Ω–∞ –∫–∞–∂–¥—É—é –Ω–æ–≥—É)'
                                  '\n- –ü–æ–¥—ä–µ–º—ã –Ω–∞ —Å–∫–∞–º–µ–π–∫—É (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.home_gluteal,
                                  parse_mode=ParseMode.HTML)





@router.callback_query(F.data == 'chest_gym')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>Ô∏è1. –ì—Ä—É–¥–Ω—ã–µ –º—ã—à—Ü—ã üí™</b>Ô∏è'
                                  '\n\n- –ñ–∏–º –ª–µ–∂–∞ –Ω–∞ —Å–∫–∞–º—å–µ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π –Ω–∞ —Å–∫–∞–º—å–µ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –†–∞–∑–≤–µ–¥–µ–Ω–∏—è –≥–∞–Ω—Ç–µ–ª–µ–π (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 12-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.gym_chest,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'legs_gym')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>Ô∏è2. –ù–æ–≥–∏ üö¥‚Äç‚ôÇÔ∏è</b>Ô∏è'
                                  '\n\n- –ñ–∏–º –Ω–æ–≥–∞–º–∏ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è —Å–æ —à—Ç–∞–Ω–≥–æ–π (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –°–≥–∏–±–∞–Ω–∏–µ –Ω–æ–≥ –≤ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–µ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.gym_legs,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'back_gym')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>Ô∏è3. –°–ø–∏–Ω–∞ üßó‚Äç</b>Ô∏è'
                                  '\n\n- –¢—è–≥–∞ —à—Ç–∞–Ω–≥–∏ –≤ –Ω–∞–∫–ª–æ–Ω–µ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –¢—è–≥–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–≥–æ –±–ª–æ–∫–∞ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –¢—è–≥–∞ –≥–∞–Ω—Ç–µ–ª–µ–π (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.gym_back,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'shoulders_gym')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>Ô∏è4. –ü–ª–µ—á–∏ üèãÔ∏è‚Äç</b>Ô∏è'
                                  '\n\n- –ñ–∏–º —à—Ç–∞–Ω–≥–∏ —Å–∏–¥—è (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –ü–æ–¥—ä–µ–º—ã —Å–æ —à—Ç–∞–Ω–≥–æ–π (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –†–∞–∑–≤–µ–¥–µ–Ω–∏—è –≤ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–µ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 12-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.gym_shoulders,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'biceps_gym')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>Ô∏è5. –ë–∏—Ü–µ–ø—Å—ã ü¶æ</b>Ô∏è'
                                  '\n\n- –°–≥–∏–±–∞–Ω–∏—è —à—Ç–∞–Ω–≥–∏ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –°–≥–∏–±–∞–Ω–∏—è –≥–∞–Ω—Ç–µ–ª–µ–π (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–≥–∏–±–∞–Ω–∏—è (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.gym_biceps,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'triceps_gym')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>Ô∏è6. –¢—Ä–∏—Ü–µ–ø—Å—ã üî•</b>Ô∏è'
                                  '\n\n- –¢—è–≥–∞ –≤–µ—Ä—Ö–Ω–µ–≥–æ –±–ª–æ–∫–∞ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –†–∞–∑–≥–∏–±–∞–Ω–∏—è —Ä—É–∫ —Å –≥–∞–Ω—Ç–µ–ª—å—é –∑–∞ –≥–æ–ª–æ–≤–æ–π (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –û—Ç–∂–∏–º–∞–Ω–∏—è –Ω–∞ –±—Ä—É—Å—å—è—Ö (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8-10 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.gym_triceps,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'abs_gym')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>Ô∏è7. –ü—Ä–µ—Å—Å üåü</b>Ô∏è'
                                  '\n\n- –°–∫—Ä—É—á–∏–≤–∞–Ω–∏—è –Ω–∞ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–µ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 12-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –ü–æ–¥—ä–µ–º—ã –Ω–æ–≥ –≤ –≤–∏—Å–µ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –ü–ª–∞–Ω–∫–∞ –Ω–∞ —Ñ–∏—Ç–±–æ–ª–µ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 30-60 —Å–µ–∫—É–Ω–¥)',
                                  reply_markup=kb.gym_abs,
                                  parse_mode=ParseMode.HTML)


@router.callback_query(F.data == 'gluteal_gym')
async def training(callback: CallbackQuery):
    await callback.message.answer('<b>Ô∏è8. –Ø–≥–æ–¥–∏—á–Ω—ã–µ –º—ã—à—Ü—ã üçë</b>Ô∏è'
                                  '\n\n- –ñ–∏–º –Ω–æ–≥–∞–º–∏ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –°–≥–∏–±–∞–Ω–∏—è –Ω–æ–≥ –≤ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–µ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 12-15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)'
                                  '\n- –ú–µ—Ä—Ç–≤—ã–µ —Ç—è–≥–∏ (3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π)',
                                  reply_markup=kb.gym_gluteal,
                                  parse_mode=ParseMode.HTML)


@router.message(F.text == 'üèãÔ∏è‚Äç‚ôÇÔ∏è –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è üèãÔ∏è‚Äç‚ôÄÔ∏è')
async def start(message: Message):
    await message.answer("""üèã<b>‚Äç‚ôÇÔ∏è –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è üèãÔ∏è‚Äç‚ôÄÔ∏è</b>

–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞–∑–¥–µ–ª "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è"! –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ —Ç–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º.

<b>üå± –ù–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å: </b>
–ï—Å–ª–∏ –≤—ã —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –≤ —Ñ–∏—Ç–Ω–µ—Å–µ, —ç—Ç–æ—Ç —É—Ä–æ–≤–µ–Ω—å –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤–∞—Å. –ú—ã –Ω–∞—É—á–∏–º –≤–∞—Å –æ—Å–Ω–æ–≤–∞–º –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π.

<b>üöÄ –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å: </b>
–î–ª—è —Ç–µ—Ö, –∫—Ç–æ —É–∂–µ –∏–º–µ–µ—Ç –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –∏ —Ö–æ—á–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏. –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ü–µ–ª–µ–π.

<b>üí™ –ñ–∏–º–æ–≤—ã–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏: </b>
–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ —Å–∏–ª–æ–≤—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö. –ú—ã –ø—Ä–µ–¥–ª–æ–∂–∏–º –≤–∞–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ö–µ–º—ã –¥–ª—è –º–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏–∏ –≤–∞—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.

–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç, –∏ –Ω–∞—á–Ω–∏—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è —É–∂–µ —Å–µ–≥–æ–¥–Ω—è! üí™‚ú®""",
                         reply_markup=kbr.professional_training,
                         parse_mode=ParseMode.HTML)

@router.message(F.text == '–ù–∞–∑–∞–¥ üîô')
async def start(message: Message):
    await message.answer('–í–æ–∑–≤—Ä–∞—â–∞—é...',
                         reply_markup=kbr.main)


@router.message(F.text == '–ù–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å üå±')
async def start(message: Message):
    file = FSInputFile('trainings/–¶–∏–∫–ª –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è.xlsx')
    await message.answer("""üéâ –í–∞—à —Ñ–∞–π–ª —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏ –≥–æ—Ç–æ–≤! üéâ

–í–æ—Ç –≤–∞—à —Ñ–∞–π–ª. –ù–∞—á–∏–Ω–∞–π—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –¥–æ—Å—Ç–∏–≥–∞–π—Ç–µ —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π! üí™""")
    await message.answer_document(file)


@router.message(F.text == '–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å üöÄ')
async def start(message: Message):
    file = FSInputFile('trainings/–¶–∏–∫–ª –Ω–∞ 4 –¥–Ω—è –¥–ª—è —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è.xlsx')
    await message.answer("""üéâ –í–∞—à —Ñ–∞–π–ª —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏ –≥–æ—Ç–æ–≤! üéâ

–í–æ—Ç –≤–∞—à —Ñ–∞–π–ª. –ù–∞—á–∏–Ω–∞–π—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –¥–æ—Å—Ç–∏–≥–∞–π—Ç–µ —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π! üí™""")
    await message.answer_document(file)


@router.message(F.text == '–ñ–∏–º–æ–≤—ã–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏ üí™')
async def start(message: Message):
    file = FSInputFile('trainings/–ñ–∏–º–æ–≤—ã–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏.docx')
    await message.answer("""üéâ –í–∞—à —Ñ–∞–π–ª —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏ –≥–æ—Ç–æ–≤! üéâ

–í–æ—Ç –≤–∞—à —Ñ–∞–π–ª. –ù–∞—á–∏–Ω–∞–π—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –¥–æ—Å—Ç–∏–≥–∞–π—Ç–µ —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π! üí™""")
    await message.answer_document(file)















